version: "3.8"

services:
  spa:
    build:
      context: ./client/spa
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_KEYCLOAK_URL: ${NEXT_PUBLIC_KEYCLOAK_URL}
    ports:
      - "3000:3000"
    depends_on:
      - user-service
      - voice-service
    networks:
      - app-network
    volumes:
      - ./client/spa:/app
    environment:
      - NEXT_PUBLIC_KEYCLOAK_URL=${NEXT_PUBLIC_KEYCLOAK_URL}
      - NEXT_PUBLIC_USER_URL=${NEXT_PUBLIC_USER_URL}
      - NEXT_PUBLIC_VOICE_URL=${NEXT_PUBLIC_VOICE_URL}
      - NEXT_PUBLIC_CLIENT_ID=${NEXT_PUBLIC_CLIENT_ID}
      - NEXT_PUBLIC_REALM=${REALM}

  user-service:
    build: ./user-service
    container_name: user-service
    depends_on:
      - mongo
      - keycloak
    ports:
      - "8001:8001"
    environment:
      - MONGO_URL=${MONGO_URL}
      - KEYCLOAK_URL=${KEYCLOAK_URL}
      - VOICE_URL=${VOICE_URL}
      - SPA_URL=${SPA_URL}
    networks:
      - app-network
    volumes:
      - ./user-service:/app

  voice-service:
    build: ./voice-service
    container_name: voice-service
    depends_on:
      - user-service
    ports:
      - "8002:8002"
    environment:
      - USER_URL=${USER_URL}
      - SPA_URL=${SPA_URL}
    networks:
      - app-network
    volumes:
      - ./voice-service:/app
  
  mongo:
    image: mongo:latest
    container_name: mongo
    restart: always
    ports:
      - "27017:27017"
    networks:
      - app-network
    volumes:
      - mongo-data:/data/db
    command: ["mongod", "--quiet"]
  
  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: keycloak
    command: start-dev
    ports:
      - "8080:8080"
    networks:
      - app-network
    volumes:
      - ./realms:/opt/keycloak/data/import
      - keycloak_data:/opt/keycloak/data 
    restart: always

networks:
  app-network:
    driver: bridge

volumes:
  keycloak_data:
    driver: local
  mongo-data:
    driver: local

# docker-compose up --build