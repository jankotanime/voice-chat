services:
  spa:
    container_name: spa-client
    build:
      context: ./client/spa
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_KEYCLOAK_URL: ${NEXT_PUBLIC_KEYCLOAK_URL}
    image: voicechat/spa-client:latest
    ports:
      - "3000:3000"
    depends_on:
      - user-service
      - voice-service
    networks:
      - app-network
    volumes:
      - ./client/spa:/app
      - /app/node_modules
    environment:
      - NEXT_PUBLIC_KEYCLOAK_URL=${NEXT_PUBLIC_KEYCLOAK_URL}
      - NEXT_PUBLIC_USER_URL=${NEXT_PUBLIC_USER_URL}
      - NEXT_PUBLIC_VOICE_URL=${NEXT_PUBLIC_VOICE_URL}
      - NEXT_PUBLIC_CLIENT_ID=${NEXT_PUBLIC_CLIENT_ID}
      - NEXT_PUBLIC_REALM=${REALM}

  ssr:
    container_name: ssr-client
    build:
      context: ./client/ssr
      dockerfile: Dockerfile
    image: voicechat/ssr-client:latest
    ports:
      - "3001:3001"
    depends_on:
      - user-service
    networks:
      - app-network
    volumes:
      - ./client/ssr:/app
      - /app/node_modules
    environment:
      - USER_URL=${SSR_USER_URL}
      - KEYCLOAK_URL=${SSR_KEYCLOAK_URL}
      - IP=${IP}

  user-service:
    build: ./user-service
    container_name: user-service
    depends_on:
      - mongo
      - keycloak
    image: voicechat/user-service:latest
    ports:
      - "8001:8001"
    environment:
      - MONGO_URL=${MONGO_URL}
      - KEYCLOAK_URL=${KEYCLOAK_URL}
      - VOICE_URL=${VOICE_URL}
      - SPA_URL=${SPA_URL}
      - BACKEND_ID=/run/secrets/backend_id
      - BACKEND_REALM=/run/secrets/backend_realm
      - BACKEND_SECRET=/run/secrets/backend_secret
    secrets:
      - backend_realm
      - backend_id
      - backend_secret
    networks:
      - app-network
    volumes:
      - ./user-service:/app
      - /app/node_modules

  voice-service:
    build: ./voice-service
    container_name: voice-service
    depends_on:
      - user-service
    image: voicechat/voice-service:latest
    ports:
      - "8002:8002"
    environment:
      - USER_URL=${USER_URL}
      - SPA_URL=${SPA_URL}
    networks:
      - app-network
    volumes:
      - ./voice-service:/app
      - /app/node_modules
  
  mongo:
    image: mongo:latest
    container_name: mongo
    restart: always
    ports:
      - "27017:27017"
    # volumes:
    #   - mongo-data:/data/db
    volumes:
      - name: mongo-data
        hostPath:
          path: /mnt/c/Users/janga/docker-volumes/mongo-data
          type: DirectoryOrCreate
    networks:
      - app-network

  mongo-seed:
    image: mongo:latest
    depends_on:
      - mongo
    volumes:
      - ./dump:/dump
    entrypoint: >
      bash -c "
        echo 'Waiting for Mongo to be ready...' &&
        sleep 5 &&
        mongorestore --host=mongo --drop /dump
      "
    networks:
      - app-network
    restart: "no"
  
  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: keycloak
    command: start-dev
    ports:
      - "8080:8080"
    networks:
      - app-network
    volumes:
      - ./keycloak-data:/opt/keycloak/data/h2
    restart: always

networks:
  app-network:
    driver: bridge

volumes:
  keycloak_data:
    driver: local
  mongo-data:
    driver: local

secrets:
  backend_realm:
    file: ./secrets/backend_realm
  backend_id:
    file: ./secrets/backend_id
  backend_secret:
    file: ./secrets/backend_secret