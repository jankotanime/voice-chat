apiVersion: v1
binaryData:
  keycloakdb.mv.db: 
data:
  keycloakdb.trace.db: |
    2025-05-06 19:55:37.500969Z jdbc[3]: exception
    org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "MIGRATION_MODEL" not found (this database is empty); SQL statement:
    SELECT ID, VERSION FROM MIGRATION_MODEL ORDER BY UPDATE_TIME DESC [42104-230]
    2025-05-06 19:55:38.386741Z jdbc[3]: exception
    org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "DATABASECHANGELOG" not found (this database is empty); SQL statement:
    SELECT COUNT(*) FROM PUBLIC.DATABASECHANGELOG [42104-230]
    2025-05-06 19:55:38.559602Z jdbc[4]: exception
    org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "DATABASECHANGELOGLOCK" not found (this database is empty); SQL statement:
    SELECT COUNT(*) FROM PUBLIC.DATABASECHANGELOGLOCK [42104-230]
    2025-05-06 19:55:38.592118Z jdbc[3]: exception
    org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "DATABASECHANGELOG" not found; SQL statement:
    SELECT COUNT(*) FROM PUBLIC.DATABASECHANGELOG [42102-230]
    2025-05-06 19:55:41.491812Z jdbc[3]: exception
    org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "T.DETAILS_JSON" not found; SQL statement:
    select t.DETAILS_JSON from PUBLIC.ADMIN_EVENT_ENTITY t where 0=1 [42122-230]
    	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
    	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
    	at org.h2.message.DbException.get(DbException.java:223)
    	at org.h2.message.DbException.get(DbException.java:199)
    	at org.h2.expression.ExpressionColumn.getColumnException(ExpressionColumn.java:244)
    	at org.h2.expression.ExpressionColumn.optimizeOther(ExpressionColumn.java:226)
    	at org.h2.expression.ExpressionColumn.optimize(ExpressionColumn.java:213)
    	at org.h2.command.query.Select.prepareExpressions(Select.java:1228)
    	at org.h2.command.query.Query.prepare(Query.java:232)
    	at org.h2.command.Parser.prepareCommand(Parser.java:489)
    	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:644)
    	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:560)
    	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1164)
    	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
    	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:315)
    	at io.agroal.pool.wrapper.ConnectionWrapper.prepareStatement(ConnectionWrapper.java:647)
    	at liquibase.database.jvm.JdbcConnection.prepareStatement(JdbcConnection.java:443)
    	at liquibase.precondition.core.ColumnExistsPrecondition.makeSureColumnExistsInOtherDBs(ColumnExistsPrecondition.java:161)
    	at liquibase.precondition.core.ColumnExistsPrecondition.checkFast(ColumnExistsPrecondition.java:140)
    	at liquibase.precondition.core.ColumnExistsPrecondition.check(ColumnExistsPrecondition.java:83)
    	at liquibase.precondition.core.NotPrecondition.check(NotPrecondition.java:34)
    	at liquibase.precondition.core.AndPrecondition.check(AndPrecondition.java:39)
    	at liquibase.precondition.core.PreconditionContainer.check(PreconditionContainer.java:213)
    	at liquibase.changelog.ChangeSet.execute(ChangeSet.java:689)
    	at liquibase.changelog.visitor.UpdateVisitor.executeAcceptedChange(UpdateVisitor.java:119)
    	at liquibase.changelog.visitor.UpdateVisitor.visit(UpdateVisitor.java:68)
    	at liquibase.changelog.ChangeLogIterator.lambda$run$0(ChangeLogIterator.java:131)
    	at liquibase.Scope.lambda$child$0(Scope.java:191)
    	at liquibase.Scope.child(Scope.java:200)
    	at liquibase.Scope.child(Scope.java:190)
    	at liquibase.Scope.child(Scope.java:169)
    	at liquibase.changelog.ChangeLogIterator.lambda$run$1(ChangeLogIterator.java:120)
    	at liquibase.Scope.lambda$child$0(Scope.java:191)
    	at liquibase.Scope.child(Scope.java:200)
    	at liquibase.Scope.child(Scope.java:190)
    	at liquibase.Scope.child(Scope.java:169)
    	at liquibase.Scope.child(Scope.java:257)
    	at liquibase.Scope.child(Scope.java:261)
    	at liquibase.changelog.ChangeLogIterator.run(ChangeLogIterator.java:89)
    	at liquibase.command.core.AbstractUpdateCommandStep.lambda$run$0(AbstractUpdateCommandStep.java:113)
    	at liquibase.Scope.lambda$child$0(Scope.java:191)
    	at liquibase.Scope.child(Scope.java:200)
    	at liquibase.Scope.child(Scope.java:190)
    	at liquibase.Scope.child(Scope.java:169)
    	at liquibase.command.core.AbstractUpdateCommandStep.run(AbstractUpdateCommandStep.java:111)
    	at liquibase.command.core.UpdateCommandStep.run(UpdateCommandStep.java:105)
    	at liquibase.command.CommandScope.execute(CommandScope.java:220)
    	at liquibase.Liquibase.lambda$update$0(Liquibase.java:216)
    	at liquibase.Scope.lambda$child$0(Scope.java:191)
    	at liquibase.Scope.child(Scope.java:200)
    	at liquibase.Scope.child(Scope.java:190)
    	at liquibase.Scope.child(Scope.java:169)
    	at liquibase.Liquibase.runInScope(Liquibase.java:1290)
    	at liquibase.Liquibase.update(Liquibase.java:205)
    	at liquibase.Liquibase.update(Liquibase.java:188)
    	at liquibase.Liquibase.update(Liquibase.java:175)
    	at org.keycloak.quarkus.runtime.storage.database.liquibase.QuarkusJpaUpdaterProvider.updateChangeSet(QuarkusJpaUpdaterProvider.java:190)
    	at org.keycloak.quarkus.runtime.storage.database.liquibase.QuarkusJpaUpdaterProvider.update(QuarkusJpaUpdaterProvider.java:105)
    	at org.keycloak.quarkus.runtime.storage.database.liquibase.QuarkusJpaUpdaterProvider.update(QuarkusJpaUpdaterProvider.java:83)
    	at org.keycloak.quarkus.runtime.storage.database.jpa.QuarkusJpaConnectionProviderFactory.update(QuarkusJpaConnectionProviderFactory.java:281)
    	at org.keycloak.quarkus.runtime.storage.database.jpa.QuarkusJpaConnectionProviderFactory.createOrUpdateSchema(QuarkusJpaConnectionProviderFactory.java:247)
    	at org.keycloak.quarkus.runtime.storage.database.jpa.QuarkusJpaConnectionProviderFactory.postInit(QuarkusJpaConnectionProviderFactory.java:124)
    	at org.keycloak.services.DefaultKeycloakSessionFactory.initializeProviders(DefaultKeycloakSessionFactory.java:168)
    	at org.keycloak.services.DefaultKeycloakSessionFactory.initializeProviders(DefaultKeycloakSessionFactory.java:165)
    	at org.keycloak.services.DefaultKeycloakSessionFactory.initializeProviders(DefaultKeycloakSessionFactory.java:165)
    	at org.keycloak.services.DefaultKeycloakSessionFactory.initProviderFactories(DefaultKeycloakSessionFactory.java:145)
    	at org.keycloak.services.DefaultKeycloakSessionFactory.initProviderFactories(DefaultKeycloakSessionFactory.java:126)
    	at org.keycloak.quarkus.runtime.integration.QuarkusKeycloakSessionFactory.init(QuarkusKeycloakSessionFactory.java:87)
    	at org.keycloak.quarkus.runtime.integration.jaxrs.QuarkusKeycloakApplication.createSessionFactory(QuarkusKeycloakApplication.java:67)
    	at org.keycloak.services.resources.KeycloakApplication.startup(KeycloakApplication.java:89)
    	at org.keycloak.quarkus.runtime.integration.jaxrs.QuarkusKeycloakApplication.onStartupEvent(QuarkusKeycloakApplication.java:52)
    	at org.keycloak.quarkus.runtime.integration.jaxrs.QuarkusKeycloakApplication_Observer_onStartupEvent_GNZ8m5QenZ9h9VNelo7awjUZFDE.notify(Unknown Source)
    	at io.quarkus.arc.impl.EventImpl$Notifier.notifyObservers(EventImpl.java:351)
    	at io.quarkus.arc.impl.EventImpl$Notifier.notify(EventImpl.java:333)
    	at io.quarkus.arc.impl.EventImpl.fire(EventImpl.java:80)
    	at io.quarkus.arc.runtime.ArcRecorder.fireLifecycleEvent(ArcRecorder.java:156)
    	at io.quarkus.arc.runtime.ArcRecorder.handleLifecycleEvents(ArcRecorder.java:107)
    	at io.quarkus.deployment.steps.LifecycleEventsBuildStep$startupEvent1144526294.deploy_0(Unknown Source)
    	at io.quarkus.deployment.steps.LifecycleEventsBuildStep$startupEvent1144526294.deploy(Unknown Source)
    	at io.quarkus.runner.ApplicationImpl.doStart(Unknown Source)
    	at io.quarkus.runtime.Application.start(Application.java:101)
    	at io.quarkus.runtime.ApplicationLifecycleManager.run(ApplicationLifecycleManager.java:119)
    	at io.quarkus.runtime.Quarkus.run(Quarkus.java:71)
    	at org.keycloak.quarkus.runtime.KeycloakMain.start(KeycloakMain.java:145)
    	at org.keycloak.quarkus.runtime.cli.Picocli.start(Picocli.java:941)
    	at org.keycloak.quarkus.runtime.cli.command.AbstractStartCommand.run(AbstractStartCommand.java:49)
    	at picocli.CommandLine.executeUserObject(CommandLine.java:2030)
    	at picocli.CommandLine.access$1500(CommandLine.java:148)
    	at picocli.CommandLine$RunLast.executeUserObjectOfLastSubcommandWithSameParent(CommandLine.java:2465)
    	at picocli.CommandLine$RunLast.handle(CommandLine.java:2457)
    	at picocli.CommandLine$RunLast.handle(CommandLine.java:2419)
    	at picocli.CommandLine$AbstractParseResultHandler.execute(CommandLine.java:2277)
    	at picocli.CommandLine$RunLast.execute(CommandLine.java:2421)
    	at picocli.CommandLine.execute(CommandLine.java:2174)
    	at org.keycloak.quarkus.runtime.cli.Picocli.parseAndRun(Picocli.java:130)
    	at org.keycloak.quarkus.runtime.KeycloakMain.main(KeycloakMain.java:116)
    	at org.keycloak.quarkus.runtime.KeycloakMain.main(KeycloakMain.java:71)
    	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
    	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
    	at io.quarkus.bootstrap.runner.QuarkusEntryPoint.doRun(QuarkusEntryPoint.java:62)
    	at io.quarkus.bootstrap.runner.QuarkusEntryPoint.main(QuarkusEntryPoint.java:33)
    2025-05-22 10:23:58.751004Z database: flush
    org.h2.message.DbException: General error: "org.h2.mvstore.MVStoreException: The file is locked: /opt/keycloak/data/h2/keycloakdb.mv.db [2.3.230/7]" [50000-230]
    	at org.h2.message.DbException.get(DbException.java:212)
    	at org.h2.message.DbException.convert(DbException.java:407)
    	at org.h2.mvstore.db.Store.lambda$new$0(Store.java:122)
    	at org.h2.mvstore.MVStore.handleException(MVStore.java:1546)
    	at org.h2.mvstore.MVStore.panic(MVStore.java:371)
    	at org.h2.mvstore.MVStore.<init>(MVStore.java:291)
    	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:2035)
    	at org.h2.mvstore.db.Store.<init>(Store.java:133)
    	at org.h2.engine.Database.<init>(Database.java:326)
    	at org.h2.engine.Engine.openSession(Engine.java:92)
    	at org.h2.engine.Engine.openSession(Engine.java:222)
    	at org.h2.engine.Engine.createSession(Engine.java:201)
    	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:344)
    	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:124)
    	at org.h2.Driver.connect(Driver.java:59)
    	at io.agroal.pool.ConnectionFactory.createConnection(ConnectionFactory.java:225)
    	at io.agroal.pool.ConnectionPool$CreateConnectionTask.call(ConnectionPool.java:580)
    	at io.agroal.pool.ConnectionPool$CreateConnectionTask.call(ConnectionPool.java:561)
    	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
    	at io.agroal.pool.util.PriorityScheduledExecutor.beforeExecute(PriorityScheduledExecutor.java:75)
    	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
    	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
    	at java.base/java.lang.Thread.run(Thread.java:1583)
    Caused by: org.h2.jdbc.JdbcSQLNonTransientException: General error: "org.h2.mvstore.MVStoreException: The file is locked: /opt/keycloak/data/h2/keycloakdb.mv.db [2.3.230/7]" [50000-230]
    	at org.h2.message.DbException.getJdbcSQLException(DbException.java:566)
    	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
    	... 23 more
    Caused by: org.h2.mvstore.MVStoreException: The file is locked: /opt/keycloak/data/h2/keycloakdb.mv.db [2.3.230/7]
    	at org.h2.mvstore.DataUtils.newMVStoreException(DataUtils.java:996)
    	at org.h2.mvstore.SingleFileStore.lockFileChannel(SingleFileStore.java:143)
    	at org.h2.mvstore.SingleFileStore.open(SingleFileStore.java:117)
    	at org.h2.mvstore.SingleFileStore.open(SingleFileStore.java:81)
    	at org.h2.mvstore.MVStore.<init>(MVStore.java:286)
    	... 17 more
    2025-05-22 10:23:59.553233Z database: flush
    org.h2.message.DbException: General error: "org.h2.mvstore.MVStoreException: The file is locked: /opt/keycloak/data/h2/keycloakdb.mv.db [2.3.230/7]" [50000-230]
    	at org.h2.message.DbException.get(DbException.java:212)
    	at org.h2.message.DbException.convert(DbException.java:407)
    	at org.h2.mvstore.db.Store.lambda$new$0(Store.java:122)
    	at org.h2.mvstore.MVStore.handleException(MVStore.java:1546)
    	at org.h2.mvstore.MVStore.panic(MVStore.java:371)
    	at org.h2.mvstore.MVStore.<init>(MVStore.java:291)
    	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:2035)
    	at org.h2.mvstore.db.Store.<init>(Store.java:133)
    	at org.h2.engine.Database.<init>(Database.java:326)
    	at org.h2.engine.Engine.openSession(Engine.java:92)
    	at org.h2.engine.Engine.openSession(Engine.java:222)
    	at org.h2.engine.Engine.createSession(Engine.java:201)
    	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:344)
    	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:124)
    	at org.h2.Driver.connect(Driver.java:59)
    	at io.agroal.pool.ConnectionFactory.createConnection(ConnectionFactory.java:225)
    	at io.agroal.pool.ConnectionPool$CreateConnectionTask.call(ConnectionPool.java:580)
    	at io.agroal.pool.ConnectionPool$CreateConnectionTask.call(ConnectionPool.java:561)
    	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
    	at io.agroal.pool.util.PriorityScheduledExecutor.beforeExecute(PriorityScheduledExecutor.java:75)
    	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
    	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
    	at java.base/java.lang.Thread.run(Thread.java:1583)
    Caused by: org.h2.jdbc.JdbcSQLNonTransientException: General error: "org.h2.mvstore.MVStoreException: The file is locked: /opt/keycloak/data/h2/keycloakdb.mv.db [2.3.230/7]" [50000-230]
    	at org.h2.message.DbException.getJdbcSQLException(DbException.java:566)
    	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
    	... 23 more
    Caused by: org.h2.mvstore.MVStoreException: The file is locked: /opt/keycloak/data/h2/keycloakdb.mv.db [2.3.230/7]
    	at org.h2.mvstore.DataUtils.newMVStoreException(DataUtils.java:996)
    	at org.h2.mvstore.SingleFileStore.lockFileChannel(SingleFileStore.java:143)
    	at org.h2.mvstore.SingleFileStore.open(SingleFileStore.java:117)
    	at org.h2.mvstore.SingleFileStore.open(SingleFileStore.java:81)
    	at org.h2.mvstore.MVStore.<init>(MVStore.java:286)
    	... 17 more
    2025-05-22 10:30:50.233804Z database: flush
    org.h2.message.DbException: General error: "org.h2.mvstore.MVStoreException: The file is locked: /opt/keycloak/data/h2/keycloakdb.mv.db [2.3.230/7]" [50000-230]
    	at org.h2.message.DbException.get(DbException.java:212)
    	at org.h2.message.DbException.convert(DbException.java:407)
    	at org.h2.mvstore.db.Store.lambda$new$0(Store.java:122)
    	at org.h2.mvstore.MVStore.handleException(MVStore.java:1546)
    	at org.h2.mvstore.MVStore.panic(MVStore.java:371)
    	at org.h2.mvstore.MVStore.<init>(MVStore.java:291)
    	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:2035)
    	at org.h2.mvstore.db.Store.<init>(Store.java:133)
    	at org.h2.engine.Database.<init>(Database.java:326)
    	at org.h2.engine.Engine.openSession(Engine.java:92)
    	at org.h2.engine.Engine.openSession(Engine.java:222)
    	at org.h2.engine.Engine.createSession(Engine.java:201)
    	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:344)
    	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:124)
    	at org.h2.Driver.connect(Driver.java:59)
    	at io.agroal.pool.ConnectionFactory.createConnection(ConnectionFactory.java:225)
    	at io.agroal.pool.ConnectionPool$CreateConnectionTask.call(ConnectionPool.java:580)
    	at io.agroal.pool.ConnectionPool$CreateConnectionTask.call(ConnectionPool.java:561)
    	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
    	at io.agroal.pool.util.PriorityScheduledExecutor.beforeExecute(PriorityScheduledExecutor.java:75)
    	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
    	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
    	at java.base/java.lang.Thread.run(Thread.java:1583)
    Caused by: org.h2.jdbc.JdbcSQLNonTransientException: General error: "org.h2.mvstore.MVStoreException: The file is locked: /opt/keycloak/data/h2/keycloakdb.mv.db [2.3.230/7]" [50000-230]
    	at org.h2.message.DbException.getJdbcSQLException(DbException.java:566)
    	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
    	... 23 more
    Caused by: org.h2.mvstore.MVStoreException: The file is locked: /opt/keycloak/data/h2/keycloakdb.mv.db [2.3.230/7]
    	at org.h2.mvstore.DataUtils.newMVStoreException(DataUtils.java:996)
    	at org.h2.mvstore.SingleFileStore.lockFileChannel(SingleFileStore.java:143)
    	at org.h2.mvstore.SingleFileStore.open(SingleFileStore.java:117)
    	at org.h2.mvstore.SingleFileStore.open(SingleFileStore.java:81)
    	at org.h2.mvstore.MVStore.<init>(MVStore.java:286)
    	... 17 more
    2025-05-22 10:30:51.270776Z database: flush
    org.h2.message.DbException: General error: "org.h2.mvstore.MVStoreException: The file is locked: /opt/keycloak/data/h2/keycloakdb.mv.db [2.3.230/7]" [50000-230]
    	at org.h2.message.DbException.get(DbException.java:212)
    	at org.h2.message.DbException.convert(DbException.java:407)
    	at org.h2.mvstore.db.Store.lambda$new$0(Store.java:122)
    	at org.h2.mvstore.MVStore.handleException(MVStore.java:1546)
    	at org.h2.mvstore.MVStore.panic(MVStore.java:371)
    	at org.h2.mvstore.MVStore.<init>(MVStore.java:291)
    	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:2035)
    	at org.h2.mvstore.db.Store.<init>(Store.java:133)
    	at org.h2.engine.Database.<init>(Database.java:326)
    	at org.h2.engine.Engine.openSession(Engine.java:92)
    	at org.h2.engine.Engine.openSession(Engine.java:222)
    	at org.h2.engine.Engine.createSession(Engine.java:201)
    	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:344)
    	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:124)
    	at org.h2.Driver.connect(Driver.java:59)
    	at io.agroal.pool.ConnectionFactory.createConnection(ConnectionFactory.java:225)
    	at io.agroal.pool.ConnectionPool$CreateConnectionTask.call(ConnectionPool.java:580)
    	at io.agroal.pool.ConnectionPool$CreateConnectionTask.call(ConnectionPool.java:561)
    	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
    	at io.agroal.pool.util.PriorityScheduledExecutor.beforeExecute(PriorityScheduledExecutor.java:75)
    	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
    	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
    	at java.base/java.lang.Thread.run(Thread.java:1583)
    Caused by: org.h2.jdbc.JdbcSQLNonTransientException: General error: "org.h2.mvstore.MVStoreException: The file is locked: /opt/keycloak/data/h2/keycloakdb.mv.db [2.3.230/7]" [50000-230]
    	at org.h2.message.DbException.getJdbcSQLException(DbException.java:566)
    	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
    	... 23 more
    Caused by: org.h2.mvstore.MVStoreException: The file is locked: /opt/keycloak/data/h2/keycloakdb.mv.db [2.3.230/7]
    	at org.h2.mvstore.DataUtils.newMVStoreException(DataUtils.java:996)
    	at org.h2.mvstore.SingleFileStore.lockFileChannel(SingleFileStore.java:143)
    	at org.h2.mvstore.SingleFileStore.open(SingleFileStore.java:117)
    	at org.h2.mvstore.SingleFileStore.open(SingleFileStore.java:81)
    	at org.h2.mvstore.MVStore.<init>(MVStore.java:286)
    	... 17 more
    2025-05-22 10:31:45.472241Z database: flush
    org.h2.message.DbException: General error: "org.h2.mvstore.MVStoreException: The file is locked: /opt/keycloak/data/h2/keycloakdb.mv.db [2.3.230/7]" [50000-230]
    	at org.h2.message.DbException.get(DbException.java:212)
    	at org.h2.message.DbException.convert(DbException.java:407)
    	at org.h2.mvstore.db.Store.lambda$new$0(Store.java:122)
    	at org.h2.mvstore.MVStore.handleException(MVStore.java:1546)
    	at org.h2.mvstore.MVStore.panic(MVStore.java:371)
    	at org.h2.mvstore.MVStore.<init>(MVStore.java:291)
    	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:2035)
    	at org.h2.mvstore.db.Store.<init>(Store.java:133)
    	at org.h2.engine.Database.<init>(Database.java:326)
    	at org.h2.engine.Engine.openSession(Engine.java:92)
    	at org.h2.engine.Engine.openSession(Engine.java:222)
    	at org.h2.engine.Engine.createSession(Engine.java:201)
    	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:344)
    	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:124)
    	at org.h2.Driver.connect(Driver.java:59)
    	at io.agroal.pool.ConnectionFactory.createConnection(ConnectionFactory.java:225)
    	at io.agroal.pool.ConnectionPool$CreateConnectionTask.call(ConnectionPool.java:580)
    	at io.agroal.pool.ConnectionPool$CreateConnectionTask.call(ConnectionPool.java:561)
    	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
    	at io.agroal.pool.util.PriorityScheduledExecutor.beforeExecute(PriorityScheduledExecutor.java:75)
    	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
    	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
    	at java.base/java.lang.Thread.run(Thread.java:1583)
    Caused by: org.h2.jdbc.JdbcSQLNonTransientException: General error: "org.h2.mvstore.MVStoreException: The file is locked: /opt/keycloak/data/h2/keycloakdb.mv.db [2.3.230/7]" [50000-230]
    	at org.h2.message.DbException.getJdbcSQLException(DbException.java:566)
    	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
    	... 23 more
    Caused by: org.h2.mvstore.MVStoreException: The file is locked: /opt/keycloak/data/h2/keycloakdb.mv.db [2.3.230/7]
    	at org.h2.mvstore.DataUtils.newMVStoreException(DataUtils.java:996)
    	at org.h2.mvstore.SingleFileStore.lockFileChannel(SingleFileStore.java:143)
    	at org.h2.mvstore.SingleFileStore.open(SingleFileStore.java:117)
    	at org.h2.mvstore.SingleFileStore.open(SingleFileStore.java:81)
    	at org.h2.mvstore.MVStore.<init>(MVStore.java:286)
    	... 17 more
    2025-05-22 10:31:46.490899Z database: flush
    org.h2.message.DbException: General error: "org.h2.mvstore.MVStoreException: The file is locked: /opt/keycloak/data/h2/keycloakdb.mv.db [2.3.230/7]" [50000-230]
    	at org.h2.message.DbException.get(DbException.java:212)
    	at org.h2.message.DbException.convert(DbException.java:407)
    	at org.h2.mvstore.db.Store.lambda$new$0(Store.java:122)
    	at org.h2.mvstore.MVStore.handleException(MVStore.java:1546)
    	at org.h2.mvstore.MVStore.panic(MVStore.java:371)
    	at org.h2.mvstore.MVStore.<init>(MVStore.java:291)
    	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:2035)
    	at org.h2.mvstore.db.Store.<init>(Store.java:133)
    	at org.h2.engine.Database.<init>(Database.java:326)
    	at org.h2.engine.Engine.openSession(Engine.java:92)
    	at org.h2.engine.Engine.openSession(Engine.java:222)
    	at org.h2.engine.Engine.createSession(Engine.java:201)
    	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:344)
    	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:124)
    	at org.h2.Driver.connect(Driver.java:59)
    	at io.agroal.pool.ConnectionFactory.createConnection(ConnectionFactory.java:225)
    	at io.agroal.pool.ConnectionPool$CreateConnectionTask.call(ConnectionPool.java:580)
    	at io.agroal.pool.ConnectionPool$CreateConnectionTask.call(ConnectionPool.java:561)
    	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
    	at io.agroal.pool.util.PriorityScheduledExecutor.beforeExecute(PriorityScheduledExecutor.java:75)
    	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
    	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
    	at java.base/java.lang.Thread.run(Thread.java:1583)
    Caused by: org.h2.jdbc.JdbcSQLNonTransientException: General error: "org.h2.mvstore.MVStoreException: The file is locked: /opt/keycloak/data/h2/keycloakdb.mv.db [2.3.230/7]" [50000-230]
    	at org.h2.message.DbException.getJdbcSQLException(DbException.java:566)
    	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
    	... 23 more
    Caused by: org.h2.mvstore.MVStoreException: The file is locked: /opt/keycloak/data/h2/keycloakdb.mv.db [2.3.230/7]
    	at org.h2.mvstore.DataUtils.newMVStoreException(DataUtils.java:996)
    	at org.h2.mvstore.SingleFileStore.lockFileChannel(SingleFileStore.java:143)
    	at org.h2.mvstore.SingleFileStore.open(SingleFileStore.java:117)
    	at org.h2.mvstore.SingleFileStore.open(SingleFileStore.java:81)
    	at org.h2.mvstore.MVStore.<init>(MVStore.java:286)
    	... 17 more
    2025-05-22 10:38:58.564451Z database: flush
    org.h2.message.DbException: General error: "org.h2.mvstore.MVStoreException: The file is locked: /opt/keycloak/data/h2/keycloakdb.mv.db [2.3.230/7]" [50000-230]
    	at org.h2.message.DbException.get(DbException.java:212)
    	at org.h2.message.DbException.convert(DbException.java:407)
    	at org.h2.mvstore.db.Store.lambda$new$0(Store.java:122)
    	at org.h2.mvstore.MVStore.handleException(MVStore.java:1546)
    	at org.h2.mvstore.MVStore.panic(MVStore.java:371)
    	at org.h2.mvstore.MVStore.<init>(MVStore.java:291)
    	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:2035)
    	at org.h2.mvstore.db.Store.<init>(Store.java:133)
    	at org.h2.engine.Database.<init>(Database.java:326)
    	at org.h2.engine.Engine.openSession(Engine.java:92)
    	at org.h2.engine.Engine.openSession(Engine.java:222)
    	at org.h2.engine.Engine.createSession(Engine.java:201)
    	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:344)
    	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:124)
    	at org.h2.Driver.connect(Driver.java:59)
    	at io.agroal.pool.ConnectionFactory.createConnection(ConnectionFactory.java:225)
    	at io.agroal.pool.ConnectionPool$CreateConnectionTask.call(ConnectionPool.java:580)
    	at io.agroal.pool.ConnectionPool$CreateConnectionTask.call(ConnectionPool.java:561)
    	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
    	at io.agroal.pool.util.PriorityScheduledExecutor.beforeExecute(PriorityScheduledExecutor.java:75)
    	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
    	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
    	at java.base/java.lang.Thread.run(Thread.java:1583)
    Caused by: org.h2.jdbc.JdbcSQLNonTransientException: General error: "org.h2.mvstore.MVStoreException: The file is locked: /opt/keycloak/data/h2/keycloakdb.mv.db [2.3.230/7]" [50000-230]
    	at org.h2.message.DbException.getJdbcSQLException(DbException.java:566)
    	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
    	... 23 more
    Caused by: org.h2.mvstore.MVStoreException: The file is locked: /opt/keycloak/data/h2/keycloakdb.mv.db [2.3.230/7]
    	at org.h2.mvstore.DataUtils.newMVStoreException(DataUtils.java:996)
    	at org.h2.mvstore.SingleFileStore.lockFileChannel(SingleFileStore.java:143)
    	at org.h2.mvstore.SingleFileStore.open(SingleFileStore.java:117)
    	at org.h2.mvstore.SingleFileStore.open(SingleFileStore.java:81)
    	at org.h2.mvstore.MVStore.<init>(MVStore.java:286)
    	... 17 more
    2025-05-22 10:38:59.776356Z database: flush
    org.h2.message.DbException: General error: "org.h2.mvstore.MVStoreException: The file is locked: /opt/keycloak/data/h2/keycloakdb.mv.db [2.3.230/7]" [50000-230]
    	at org.h2.message.DbException.get(DbException.java:212)
    	at org.h2.message.DbException.convert(DbException.java:407)
    	at org.h2.mvstore.db.Store.lambda$new$0(Store.java:122)
    	at org.h2.mvstore.MVStore.handleException(MVStore.java:1546)
    	at org.h2.mvstore.MVStore.panic(MVStore.java:371)
    	at org.h2.mvstore.MVStore.<init>(MVStore.java:291)
    	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:2035)
    	at org.h2.mvstore.db.Store.<init>(Store.java:133)
    	at org.h2.engine.Database.<init>(Database.java:326)
    	at org.h2.engine.Engine.openSession(Engine.java:92)
    	at org.h2.engine.Engine.openSession(Engine.java:222)
    	at org.h2.engine.Engine.createSession(Engine.java:201)
    	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:344)
    	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:124)
    	at org.h2.Driver.connect(Driver.java:59)
    	at io.agroal.pool.ConnectionFactory.createConnection(ConnectionFactory.java:225)
    	at io.agroal.pool.ConnectionPool$CreateConnectionTask.call(ConnectionPool.java:580)
    	at io.agroal.pool.ConnectionPool$CreateConnectionTask.call(ConnectionPool.java:561)
    	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
    	at io.agroal.pool.util.PriorityScheduledExecutor.beforeExecute(PriorityScheduledExecutor.java:75)
    	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
    	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
    	at java.base/java.lang.Thread.run(Thread.java:1583)
    Caused by: org.h2.jdbc.JdbcSQLNonTransientException: General error: "org.h2.mvstore.MVStoreException: The file is locked: /opt/keycloak/data/h2/keycloakdb.mv.db [2.3.230/7]" [50000-230]
    	at org.h2.message.DbException.getJdbcSQLException(DbException.java:566)
    	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
    	... 23 more
    Caused by: org.h2.mvstore.MVStoreException: The file is locked: /opt/keycloak/data/h2/keycloakdb.mv.db [2.3.230/7]
    	at org.h2.mvstore.DataUtils.newMVStoreException(DataUtils.java:996)
    	at org.h2.mvstore.SingleFileStore.lockFileChannel(SingleFileStore.java:143)
    	at org.h2.mvstore.SingleFileStore.open(SingleFileStore.java:117)
    	at org.h2.mvstore.SingleFileStore.open(SingleFileStore.java:81)
    	at org.h2.mvstore.MVStore.<init>(MVStore.java:286)
    	... 17 more
    2025-05-22 10:40:38.419722Z database: flush
    org.h2.message.DbException: General error: "org.h2.mvstore.MVStoreException: The file is locked: /opt/keycloak/data/h2/keycloakdb.mv.db [2.3.230/7]" [50000-230]
    	at org.h2.message.DbException.get(DbException.java:212)
    	at org.h2.message.DbException.convert(DbException.java:407)
    	at org.h2.mvstore.db.Store.lambda$new$0(Store.java:122)
    	at org.h2.mvstore.MVStore.handleException(MVStore.java:1546)
    	at org.h2.mvstore.MVStore.panic(MVStore.java:371)
    	at org.h2.mvstore.MVStore.<init>(MVStore.java:291)
    	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:2035)
    	at org.h2.mvstore.db.Store.<init>(Store.java:133)
    	at org.h2.engine.Database.<init>(Database.java:326)
    	at org.h2.engine.Engine.openSession(Engine.java:92)
    	at org.h2.engine.Engine.openSession(Engine.java:222)
    	at org.h2.engine.Engine.createSession(Engine.java:201)
    	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:344)
    	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:124)
    	at org.h2.Driver.connect(Driver.java:59)
    	at io.agroal.pool.ConnectionFactory.createConnection(ConnectionFactory.java:225)
    	at io.agroal.pool.ConnectionPool$CreateConnectionTask.call(ConnectionPool.java:580)
    	at io.agroal.pool.ConnectionPool$CreateConnectionTask.call(ConnectionPool.java:561)
    	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
    	at io.agroal.pool.util.PriorityScheduledExecutor.beforeExecute(PriorityScheduledExecutor.java:75)
    	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
    	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
    	at java.base/java.lang.Thread.run(Thread.java:1583)
    Caused by: org.h2.jdbc.JdbcSQLNonTransientException: General error: "org.h2.mvstore.MVStoreException: The file is locked: /opt/keycloak/data/h2/keycloakdb.mv.db [2.3.230/7]" [50000-230]
    	at org.h2.message.DbException.getJdbcSQLException(DbException.java:566)
    	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
    	... 23 more
    Caused by: org.h2.mvstore.MVStoreException: The file is locked: /opt/keycloak/data/h2/keycloakdb.mv.db [2.3.230/7]
    	at org.h2.mvstore.DataUtils.newMVStoreException(DataUtils.java:996)
    	at org.h2.mvstore.SingleFileStore.lockFileChannel(SingleFileStore.java:143)
    	at org.h2.mvstore.SingleFileStore.open(SingleFileStore.java:117)
    	at org.h2.mvstore.SingleFileStore.open(SingleFileStore.java:81)
    	at org.h2.mvstore.MVStore.<init>(MVStore.java:286)
    	... 17 more
    2025-05-22 10:40:39.537104Z database: flush
    org.h2.message.DbException: General error: "org.h2.mvstore.MVStoreException: The file is locked: /opt/keycloak/data/h2/keycloakdb.mv.db [2.3.230/7]" [50000-230]
    	at org.h2.message.DbException.get(DbException.java:212)
    	at org.h2.message.DbException.convert(DbException.java:407)
    	at org.h2.mvstore.db.Store.lambda$new$0(Store.java:122)
    	at org.h2.mvstore.MVStore.handleException(MVStore.java:1546)
    	at org.h2.mvstore.MVStore.panic(MVStore.java:371)
    	at org.h2.mvstore.MVStore.<init>(MVStore.java:291)
    	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:2035)
    	at org.h2.mvstore.db.Store.<init>(Store.java:133)
    	at org.h2.engine.Database.<init>(Database.java:326)
    	at org.h2.engine.Engine.openSession(Engine.java:92)
    	at org.h2.engine.Engine.openSession(Engine.java:222)
    	at org.h2.engine.Engine.createSession(Engine.java:201)
    	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:344)
    	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:124)
    	at org.h2.Driver.connect(Driver.java:59)
    	at io.agroal.pool.ConnectionFactory.createConnection(ConnectionFactory.java:225)
    	at io.agroal.pool.ConnectionPool$CreateConnectionTask.call(ConnectionPool.java:580)
    	at io.agroal.pool.ConnectionPool$CreateConnectionTask.call(ConnectionPool.java:561)
    	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
    	at io.agroal.pool.util.PriorityScheduledExecutor.beforeExecute(PriorityScheduledExecutor.java:75)
    	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
    	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
    	at java.base/java.lang.Thread.run(Thread.java:1583)
    Caused by: org.h2.jdbc.JdbcSQLNonTransientException: General error: "org.h2.mvstore.MVStoreException: The file is locked: /opt/keycloak/data/h2/keycloakdb.mv.db [2.3.230/7]" [50000-230]
    	at org.h2.message.DbException.getJdbcSQLException(DbException.java:566)
    	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
    	... 23 more
    Caused by: org.h2.mvstore.MVStoreException: The file is locked: /opt/keycloak/data/h2/keycloakdb.mv.db [2.3.230/7]
    	at org.h2.mvstore.DataUtils.newMVStoreException(DataUtils.java:996)
    	at org.h2.mvstore.SingleFileStore.lockFileChannel(SingleFileStore.java:143)
    	at org.h2.mvstore.SingleFileStore.open(SingleFileStore.java:117)
    	at org.h2.mvstore.SingleFileStore.open(SingleFileStore.java:81)
    	at org.h2.mvstore.MVStore.<init>(MVStore.java:286)
    	... 17 more
    2025-05-24 09:21:16.021255Z database: flush
    org.h2.message.DbException: General error: "org.h2.mvstore.MVStoreException: The file is locked: /opt/keycloak/data/h2/keycloakdb.mv.db [2.3.230/7]" [50000-230]
    	at org.h2.message.DbException.get(DbException.java:212)
    	at org.h2.message.DbException.convert(DbException.java:407)
    	at org.h2.mvstore.db.Store.lambda$new$0(Store.java:122)
    	at org.h2.mvstore.MVStore.handleException(MVStore.java:1546)
    	at org.h2.mvstore.MVStore.panic(MVStore.java:371)
    	at org.h2.mvstore.MVStore.<init>(MVStore.java:291)
    	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:2035)
    	at org.h2.mvstore.db.Store.<init>(Store.java:133)
    	at org.h2.engine.Database.<init>(Database.java:326)
    	at org.h2.engine.Engine.openSession(Engine.java:92)
    	at org.h2.engine.Engine.openSession(Engine.java:222)
    	at org.h2.engine.Engine.createSession(Engine.java:201)
    	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:344)
    	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:124)
    	at org.h2.Driver.connect(Driver.java:59)
    	at io.agroal.pool.ConnectionFactory.createConnection(ConnectionFactory.java:225)
    	at io.agroal.pool.ConnectionPool$CreateConnectionTask.call(ConnectionPool.java:580)
    	at io.agroal.pool.ConnectionPool$CreateConnectionTask.call(ConnectionPool.java:561)
    	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
    	at io.agroal.pool.util.PriorityScheduledExecutor.beforeExecute(PriorityScheduledExecutor.java:75)
    	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
    	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
    	at java.base/java.lang.Thread.run(Thread.java:1583)
    Caused by: org.h2.jdbc.JdbcSQLNonTransientException: General error: "org.h2.mvstore.MVStoreException: The file is locked: /opt/keycloak/data/h2/keycloakdb.mv.db [2.3.230/7]" [50000-230]
    	at org.h2.message.DbException.getJdbcSQLException(DbException.java:566)
    	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
    	... 23 more
    Caused by: org.h2.mvstore.MVStoreException: The file is locked: /opt/keycloak/data/h2/keycloakdb.mv.db [2.3.230/7]
    	at org.h2.mvstore.DataUtils.newMVStoreException(DataUtils.java:996)
    	at org.h2.mvstore.SingleFileStore.lockFileChannel(SingleFileStore.java:143)
    	at org.h2.mvstore.SingleFileStore.open(SingleFileStore.java:117)
    	at org.h2.mvstore.SingleFileStore.open(SingleFileStore.java:81)
    	at org.h2.mvstore.MVStore.<init>(MVStore.java:286)
    	... 17 more
    2025-05-24 09:21:16.848001Z database: flush
    org.h2.message.DbException: General error: "org.h2.mvstore.MVStoreException: The file is locked: /opt/keycloak/data/h2/keycloakdb.mv.db [2.3.230/7]" [50000-230]
    	at org.h2.message.DbException.get(DbException.java:212)
    	at org.h2.message.DbException.convert(DbException.java:407)
    	at org.h2.mvstore.db.Store.lambda$new$0(Store.java:122)
    	at org.h2.mvstore.MVStore.handleException(MVStore.java:1546)
    	at org.h2.mvstore.MVStore.panic(MVStore.java:371)
    	at org.h2.mvstore.MVStore.<init>(MVStore.java:291)
    	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:2035)
    	at org.h2.mvstore.db.Store.<init>(Store.java:133)
    	at org.h2.engine.Database.<init>(Database.java:326)
    	at org.h2.engine.Engine.openSession(Engine.java:92)
    	at org.h2.engine.Engine.openSession(Engine.java:222)
    	at org.h2.engine.Engine.createSession(Engine.java:201)
    	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:344)
    	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:124)
    	at org.h2.Driver.connect(Driver.java:59)
    	at io.agroal.pool.ConnectionFactory.createConnection(ConnectionFactory.java:225)
    	at io.agroal.pool.ConnectionPool$CreateConnectionTask.call(ConnectionPool.java:580)
    	at io.agroal.pool.ConnectionPool$CreateConnectionTask.call(ConnectionPool.java:561)
    	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
    	at io.agroal.pool.util.PriorityScheduledExecutor.beforeExecute(PriorityScheduledExecutor.java:75)
    	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
    	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
    	at java.base/java.lang.Thread.run(Thread.java:1583)
    Caused by: org.h2.jdbc.JdbcSQLNonTransientException: General error: "org.h2.mvstore.MVStoreException: The file is locked: /opt/keycloak/data/h2/keycloakdb.mv.db [2.3.230/7]" [50000-230]
    	at org.h2.message.DbException.getJdbcSQLException(DbException.java:566)
    	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
    	... 23 more
    Caused by: org.h2.mvstore.MVStoreException: The file is locked: /opt/keycloak/data/h2/keycloakdb.mv.db [2.3.230/7]
    	at org.h2.mvstore.DataUtils.newMVStoreException(DataUtils.java:996)
    	at org.h2.mvstore.SingleFileStore.lockFileChannel(SingleFileStore.java:143)
    	at org.h2.mvstore.SingleFileStore.open(SingleFileStore.java:117)
    	at org.h2.mvstore.SingleFileStore.open(SingleFileStore.java:81)
    	at org.h2.mvstore.MVStore.<init>(MVStore.java:286)
    	... 17 more
    2025-05-24 09:27:45.694525Z database: flush
    org.h2.message.DbException: General error: "org.h2.mvstore.MVStoreException: The file is locked: /opt/keycloak/data/h2/keycloakdb.mv.db [2.3.230/7]" [50000-230]
    	at org.h2.message.DbException.get(DbException.java:212)
    	at org.h2.message.DbException.convert(DbException.java:407)
    	at org.h2.mvstore.db.Store.lambda$new$0(Store.java:122)
    	at org.h2.mvstore.MVStore.handleException(MVStore.java:1546)
    	at org.h2.mvstore.MVStore.panic(MVStore.java:371)
    	at org.h2.mvstore.MVStore.<init>(MVStore.java:291)
    	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:2035)
    	at org.h2.mvstore.db.Store.<init>(Store.java:133)
    	at org.h2.engine.Database.<init>(Database.java:326)
    	at org.h2.engine.Engine.openSession(Engine.java:92)
    	at org.h2.engine.Engine.openSession(Engine.java:222)
    	at org.h2.engine.Engine.createSession(Engine.java:201)
    	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:344)
    	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:124)
    	at org.h2.Driver.connect(Driver.java:59)
    	at io.agroal.pool.ConnectionFactory.createConnection(ConnectionFactory.java:225)
    	at io.agroal.pool.ConnectionPool$CreateConnectionTask.call(ConnectionPool.java:580)
    	at io.agroal.pool.ConnectionPool$CreateConnectionTask.call(ConnectionPool.java:561)
    	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
    	at io.agroal.pool.util.PriorityScheduledExecutor.beforeExecute(PriorityScheduledExecutor.java:75)
    	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
    	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
    	at java.base/java.lang.Thread.run(Thread.java:1583)
    Caused by: org.h2.jdbc.JdbcSQLNonTransientException: General error: "org.h2.mvstore.MVStoreException: The file is locked: /opt/keycloak/data/h2/keycloakdb.mv.db [2.3.230/7]" [50000-230]
    	at org.h2.message.DbException.getJdbcSQLException(DbException.java:566)
    	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
    	... 23 more
    Caused by: org.h2.mvstore.MVStoreException: The file is locked: /opt/keycloak/data/h2/keycloakdb.mv.db [2.3.230/7]
    	at org.h2.mvstore.DataUtils.newMVStoreException(DataUtils.java:996)
    	at org.h2.mvstore.SingleFileStore.lockFileChannel(SingleFileStore.java:143)
    	at org.h2.mvstore.SingleFileStore.open(SingleFileStore.java:117)
    	at org.h2.mvstore.SingleFileStore.open(SingleFileStore.java:81)
    	at org.h2.mvstore.MVStore.<init>(MVStore.java:286)
    	... 17 more
    2025-05-24 09:27:46.487249Z database: flush
    org.h2.message.DbException: General error: "org.h2.mvstore.MVStoreException: The file is locked: /opt/keycloak/data/h2/keycloakdb.mv.db [2.3.230/7]" [50000-230]
    	at org.h2.message.DbException.get(DbException.java:212)
    	at org.h2.message.DbException.convert(DbException.java:407)
    	at org.h2.mvstore.db.Store.lambda$new$0(Store.java:122)
    	at org.h2.mvstore.MVStore.handleException(MVStore.java:1546)
    	at org.h2.mvstore.MVStore.panic(MVStore.java:371)
    	at org.h2.mvstore.MVStore.<init>(MVStore.java:291)
    	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:2035)
    	at org.h2.mvstore.db.Store.<init>(Store.java:133)
    	at org.h2.engine.Database.<init>(Database.java:326)
    	at org.h2.engine.Engine.openSession(Engine.java:92)
    	at org.h2.engine.Engine.openSession(Engine.java:222)
    	at org.h2.engine.Engine.createSession(Engine.java:201)
    	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:344)
    	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:124)
    	at org.h2.Driver.connect(Driver.java:59)
    	at io.agroal.pool.ConnectionFactory.createConnection(ConnectionFactory.java:225)
    	at io.agroal.pool.ConnectionPool$CreateConnectionTask.call(ConnectionPool.java:580)
    	at io.agroal.pool.ConnectionPool$CreateConnectionTask.call(ConnectionPool.java:561)
    	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
    	at io.agroal.pool.util.PriorityScheduledExecutor.beforeExecute(PriorityScheduledExecutor.java:75)
    	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
    	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
    	at java.base/java.lang.Thread.run(Thread.java:1583)
    Caused by: org.h2.jdbc.JdbcSQLNonTransientException: General error: "org.h2.mvstore.MVStoreException: The file is locked: /opt/keycloak/data/h2/keycloakdb.mv.db [2.3.230/7]" [50000-230]
    	at org.h2.message.DbException.getJdbcSQLException(DbException.java:566)
    	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
    	... 23 more
    Caused by: org.h2.mvstore.MVStoreException: The file is locked: /opt/keycloak/data/h2/keycloakdb.mv.db [2.3.230/7]
    	at org.h2.mvstore.DataUtils.newMVStoreException(DataUtils.java:996)
    	at org.h2.mvstore.SingleFileStore.lockFileChannel(SingleFileStore.java:143)
    	at org.h2.mvstore.SingleFileStore.open(SingleFileStore.java:117)
    	at org.h2.mvstore.SingleFileStore.open(SingleFileStore.java:81)
    	at org.h2.mvstore.MVStore.<init>(MVStore.java:286)
    	... 17 more
kind: ConfigMap
metadata:
  labels:
    io.kompose.service: keycloak
  name: keycloak-cm0
